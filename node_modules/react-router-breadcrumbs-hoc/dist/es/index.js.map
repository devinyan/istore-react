{"version":3,"file":"index.js","sources":["../../node_modules/decamelize/index.js","../../node_modules/humanize-string/index.js","../../src/index.js"],"sourcesContent":["'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n","'use strict';\nvar decamelize = require('decamelize');\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tstr = decamelize(str);\n\tstr = str.toLowerCase().replace(/[_-]+/g, ' ').replace(/\\s{2,}/g, ' ').trim();\n\tstr = str.charAt(0).toUpperCase() + str.slice(1);\n\n\treturn str;\n};\n","import { createElement } from 'react';\nimport { matchPath, withRouter } from 'react-router';\nimport humanizeString from 'humanize-string';\n\nconst DEFAULT_MATCH_OPTIONS = { exact: true };\nconst NO_BREADCRUMB = 'NO_BREADCRUMB';\n\n// renders and returns the breadcrumb complete with `match`, `location`, and `key` props\nconst render = ({ breadcrumb, match, location }) => {\n  const componentProps = { match, location, key: match.path };\n  if (typeof breadcrumb === 'function') {\n    return createElement(breadcrumb, componentProps);\n  }\n  return createElement('span', componentProps, breadcrumb);\n};\n\n// small helper method to get a default `humanize-string` breadcrumb if the\n// user hasn't provided one\nconst getDefaultBreadcrumb = ({ pathSection, currentSection, location }) => {\n  const match = matchPath(pathSection, { ...DEFAULT_MATCH_OPTIONS, path: pathSection });\n\n  return render({\n    breadcrumb: humanizeString(currentSection),\n    match,\n    location,\n  });\n};\n\n// loops through the route array (if provided) and returns either\n// a user-provided breadcrumb OR a sensible default via `humanize-string`\nconst getBreadcrumb = ({\n  currentSection,\n  disableDefaults,\n  excludePaths,\n  location,\n  pathSection,\n  routes,\n}) => {\n  let breadcrumb;\n\n  // check the optional `exludePaths` option in `options` to see if the\n  // current path should not include a breadcrumb\n  if (excludePaths && excludePaths.includes(pathSection)) {\n    return NO_BREADCRUMB;\n  }\n\n  // loop through the route array and see if the user has provided a custom breadcrumb\n  routes.some(({ breadcrumb: userProvidedBreadcrumb, matchOptions, path }) => {\n    if (!path) {\n      throw new Error('withBreadcrumbs: `path` must be provided in every route object');\n    }\n\n    const match = matchPath(pathSection, { ...(matchOptions || DEFAULT_MATCH_OPTIONS), path });\n\n    // if user passed breadcrumb: null OR custom match options to suppress a breadcrumb\n    // we need to know NOT to add it to the matches array\n    // see: `if (breadcrumb !== NO_BREADCRUMB)` below\n    if ((match && userProvidedBreadcrumb === null) || (!match && matchOptions)) {\n      breadcrumb = NO_BREADCRUMB;\n      return true;\n    }\n\n    if (match) {\n      // this covers the case where a user may be extending their react-router route\n      // config with breadcrumbs, but also does not want default breadcrumbs to be\n      // automatically generated (opt-in)\n      if (!userProvidedBreadcrumb && disableDefaults) {\n        breadcrumb = NO_BREADCRUMB;\n        return true;\n      }\n\n      breadcrumb = render({\n        // although we have a match, the user may be passing their react-router config object\n        // which we support. The route config object may not have a `breadcrumb` param specified.\n        // If this is the case, we should provide a default via `humanizeString`\n        breadcrumb: userProvidedBreadcrumb || humanizeString(currentSection),\n        match,\n        location,\n      });\n      return true;\n    }\n    return false;\n  });\n\n  if (breadcrumb) {\n    // user provided a breadcrumb prop, or we generated one via humanizeString above ~L75\n    return breadcrumb;\n  } else if (disableDefaults) {\n    // if there was no breadcrumb provided and user has disableDefaults turned on\n    return NO_BREADCRUMB;\n  }\n\n  // if the above conditionals don't fire, generate a default breadcrumb based on the path\n  return getDefaultBreadcrumb({\n    pathSection,\n    // include a \"Home\" breadcrumb by default (can be overrode or disabled in config)\n    currentSection: pathSection === '/' ? 'Home' : currentSection,\n    location,\n  });\n};\n\nexport const getBreadcrumbs = ({ routes, location, options = {} }) => {\n  const matches = [];\n  const { pathname } = location;\n\n  pathname\n    .split('?')[0]\n    // remove trailing slash \"/\" from pathname\n    .replace(/\\/$/, '')\n    // split pathname into sections\n    .split('/')\n    // reduce over the sections and find matches from `routes` prop\n    .reduce((previousSection, currentSection) => {\n      // combine the last route section with the currentSection\n      // ex `pathname = /1/2/3 results in match checks for\n      // `/1`, `/1/2`, `/1/2/3`\n      const pathSection = !currentSection ? '/' : `${previousSection}/${currentSection}`;\n\n      const breadcrumb = getBreadcrumb({\n        currentSection,\n        location,\n        pathSection,\n        routes,\n        ...options,\n      });\n\n      // add the breadcrumb to the matches array\n      // unless the user has explicitly passed { path: x, breadcrumb: null } to disable\n      if (breadcrumb !== NO_BREADCRUMB) {\n        matches.push(breadcrumb);\n      }\n\n      return pathSection === '/' ? '' : pathSection;\n    }, null);\n\n  return matches;\n};\n\n// takes a route array and recursively flattens it IF there are\n// nested routes in the config\nconst flattenRoutes = routes => routes.reduce((arr, route) => {\n  if (route.routes) {\n    return arr.concat([route, ...flattenRoutes(route.routes)]);\n  }\n  return arr.concat(route);\n}, []);\n\nconst withBreadcrumbs = (routes = [], options) => Component => withRouter(props =>\n  createElement(Component, {\n    ...props,\n    breadcrumbs: getBreadcrumbs({\n      routes: flattenRoutes(routes),\n      location: props.location,\n      options,\n    }),\n  }));\n\nexport default withBreadcrumbs;\n"],"names":["DEFAULT_MATCH_OPTIONS","exact","NO_BREADCRUMB","render","breadcrumb","match","location","componentProps","key","path","createElement","getDefaultBreadcrumb","pathSection","currentSection","matchPath","humanizeString","getBreadcrumb","disableDefaults","excludePaths","routes","includes","some","userProvidedBreadcrumb","matchOptions","Error","getBreadcrumbs","options","matches","pathname","split","replace","reduce","previousSection","push","flattenRoutes","arr","route","concat","withBreadcrumbs","withRouter","Component","props"],"mappings":"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"}